extends ./_layout
block contents
  main
    todo
    script(type="riot/tag")
      todo
        h1 TODO - 普通の使い方
        form(onsubmit="{addTask}")
          input(ref="task" placeholder="新規タスクを入力")
          button 追加
        ul
          li(each="{task in tasks}" class="{is_done: task.done}" onclick="{toggleTask.bind(this, task)}") {task.title}
        style.
          .is_done {
            text-decoration: line-through;
            color: #ccc;
        .
          this.tasks = [
            {title:"riotで何か作ってみる",  done:true},
            {title:"fluxを実践してみる",    done:false},
          ];
          addTask(e) {
            e.preventDefault()
            this.tasks.push({title:this.refs.task.value, done:false})
            this.refs.task.value = ""
          }
          toggleTask(task, e) {
            task.done = !task.done
          }
    h2 解説
    ul
      li 初期化
        ul
          li riotのコンストラクタ？のとこで、this.tasksに2つのタスクを追加
          li liタグに、this.tasksをループで展開
      li タスク追加
        ul
          li フォームのonsubmitにaddTask()を設定
          li addTask()は、入力されたタスク（this.refs.task.value）をthis.taskに追加
          li this.refs.task.value を空にする
          li すると自動で、this.update()されるので、liタグに展開してるthis.tasks も書き換わる
      li トグル
        ul
          li liタグにonclickに、toggleTask()を設定
          li toggleTask()は、ステータスdoneを反転
          li すると自動で、this.update()されるので、liタグに展開してるthis.tasks も書き換わる
    h2 雑感
    ul
      li fluxが何なのかイマイチ分からないが、十分分かりやすいし、シンプルだ。
      li this.tasksのようにコンストラクタ？部分で必要な変数を定義しておくだけで、情報も一箇所にまとまるし、何が困るのだろう？

block append js
  script.
    riot.mount("todo")
